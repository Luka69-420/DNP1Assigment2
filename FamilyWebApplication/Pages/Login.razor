@page "/login"
@using Models
@using FamilyWebApplication.Data
@using Microsoft.AspNetCore.Mvc.ModelBinding
@inject AdultDataList DataList;
@inject NavigationManager NavManager

<h3>Login</h3>

@if (showAutheticationError)
{
    <div class="alert alert-danger" role="alert">
        <p>@authenticationErrorText</p>
    </div>
}

<EditForm Model="@user" OnValidSubmit="@ExecuteLogin">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    
    <div class="form-group row">
        <label for="username" class="col-md-2 col-form-label">Username:</label>
        <div class="col-md-10">
            <input type="text" id="username" class="form-control" @bind-value="user.Username"/>
            <ValidationMessage For="@(() => user.Username)"/>
        </div>
    </div>
    
    <div class="form-group row">
        <label for="password" class="col-md-2 col-form-label">Password:</label>
        <div class="col-md-10">
            <input type="text" id="password" class="form-control" @bind-value="user.Password"/>
            <ValidationMessage For="@(() => user.Password)"/>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-12 text-right">
            <button type="submit" class="btn btn-success">Login</button>
        </div>
    </div>
</EditForm>

@code {
    User user = new User();
    bool showAutheticationError = false;
    string authenticationErrorText = "";

    void ExecuteLogin()
    {
        showAutheticationError = false;
    
        User result = DataList.Login(user);

        if (result is not null)
        {
            NavManager.NavigateTo("/counter");
        }
        else
        {
            authenticationErrorText = "There was an error trying to log in.";
            showAutheticationError = true;
        }
    }
}